using ItServiceApp.Data;
using ItServiceApp.MapperProfiles;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Identity;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.FileProviders;
using Microsoft.Extensions.Hosting;
using Newtonsoft.Json;
using System;
using System.IO;
using ItServiceApp.Business.MapperProfiles;
using ItServiceApp.Business.Services.Email;
using ItServiceApp.Business.Services.Payment;
using ItServiceApp.Core.Identity;

namespace ItServiceApp
{
    //https://www.syncfusion.com/products/communitylicense
    //https://js.devexpress.com/Demos/WidgetsGallery/Demo/DataGrid/Overview/jQuery/Light/
    public class Startup
    {
        // This method gets called by the runtime. Use this method to add services to the container.
        // For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940
        public Startup(IConfiguration configuration)
        {
            Configuration = configuration;
        }
        public IConfiguration Configuration { get; }
        public void ConfigureServices(IServiceCollection services)
        {
            //devextreme
            services.AddDbContext<MyContext>(options =>
            {
                options.UseSqlServer(Configuration.GetConnectionString("SqlConnection"));
            });
            services.AddIdentity<ApplicationUser, ApplicationRole>(options =>
            {
                options.Password.RequireUppercase = false;
                options.Password.RequireLowercase = false;
                options.Password.RequireDigit = true;
                options.Password.RequiredLength = 5;

                //lockout setting 
                options.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(5); //atma süresi
                options.Lockout.MaxFailedAccessAttempts = 3; //3ten fazla yanlýþ girerse atar
                options.Lockout.AllowedForNewUsers = false; //kitlediyse kayýt olamasýn
                //User Setting
                options.User.AllowedUserNameCharacters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-._@+";
                options.User.RequireUniqueEmail = true;
                //options.SignIn.RequireConfirmedEmail = true; //confirm edilmemiþ e maillerin giriþini engelliyor.
            }).AddEntityFrameworkStores<MyContext>().AddDefaultTokenProviders();

            services.ConfigureApplicationCookie(options =>
            {
                //cookie settings
                options.ExpireTimeSpan = TimeSpan.FromMinutes(5);
                options.LoginPath = "/Account/Login";
                options.AccessDeniedPath = "/Account/AccessDenied";
                options.SlidingExpiration = true;
            });
            services.AddTransient<IEmailSender, EmailSender>();//loose coupling --yarýn bi gün servis deðiirse git saðdakini sil yeni servis saðlayýcýný yazarsýn
            services.AddScoped<IPaymentService, IyzicoPaymentService>();//servis tanýmlandý
            //services.AddScoped<IyzicoPaymentService>(); üsttekiyle ayn iþi yapýyor ancak yarýn bi gün servis saðlaycý deðiþir iþe gidip Payment kontrollerdaki 
            //yorum sATIRI þeklinde tanýmlanan yerler de deðiþecekti.tasarým desenleri ve mimarileri engin bulut
            services.AddAutoMapper(options =>
            {
                options.AddProfile<PaymentProfile>();
                //options.AddProfile(typeof(PaymentProfile)); ya böyle ya da üstteki gibi ama ayný bok
                options.AddProfile<EntityProfile>();
            });
            //baðlý taplolardan iç içe veri döngüsü olmamasý için yazýyoruz. Öðrneðin kiþi tablosu ve il tablosu gibi bire çok iliþkili tablolarda
            //kiþiyi okuyor ilini okuyor ilden tekrar kiþiyi okuyor sonra kiþiden tekrar il vsvs.
            services.AddControllersWithViews().AddNewtonsoftJson(options=>
                {
                    options.SerializerSettings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore;
            });
        }

        //https://obfuscator.io/ javascript kodunu þifrelemeye yarýyor.

        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }
            app.UseHttpsRedirection();
            app.UseStaticFiles(); //wwwroot klasöründeki statik dosyalarý kullanabilmek için
            app.UseStaticFiles(new StaticFileOptions()
            {
                FileProvider = new PhysicalFileProvider(Path.Combine(Directory.GetCurrentDirectory(), @"node_modules")),
                RequestPath = new PathString("/vendor")
            });//kullanabilmek için node_modules klasörünü de wwwrot gibi static file olduðunu tanýtýyoruz.
            
            app.UseRouting();
            app.UseAuthentication();//login logout kullanabilmek için
            app.UseAuthorization();//authorization attiribute kullanabilmek için

            app.UseEndpoints(endpoints =>
            {
                endpoints.MapControllerRoute(
                    name: "default",
                    pattern: "{controller=Home}/{action=Index}/{id?}"); 
                endpoints.MapAreaControllerRoute(
                    name: "admin",
                    areaName: "admin",
                    pattern: "admin/{controller=Manage}/{action=Index}/{id?}");
            });
        }
    }
}

//open project in file explorer, type cmd, npm, npm init, npm i ==> projedeki paketleri indirir(package.jsondaki), öte türlü ayný adýmlar ama her biri
//nde npm i paketin adý
