@model CategoryViewModel  
@*ekranda yazılacak şeyleri direkt stün adı olarak almak yerine kendi istediğimiz şeyleri yazması için viewmodel yükledik. daha sonra buradaki model tipini 
oluşturduğumuz modelin tipine çevirdik. viewimporta da klasörün yerini tanımladık*@
<div class="text-danger">
    <div asp-validation-summary="All"></div>  @*hata varsa hata mesajını ekrana yazdırıyor.*@
</div>

<form id="frm-add">
    <label asp-for="CategoryName"></label>
    <input asp-for="CategoryName" />
    <span class="text-danger" asp-validation-for="CategoryName"></span>
    <br />
    <label asp-for="Description"></label>
    <input asp-for="Description" />
    <span class="text-danger" asp-validation-for="Description"></span>

    <input type="submit" value="Ekle" class="btn btn-danger" />
</form>
@section Scripts{ 
    <script>
        $(function () {
            $("#frm-add").submit(function (e) {
                e.preventDefault();
                var model = {
                    categoryName: $("#CategoryName").val(),
                    description: $("#Description").val()
                };
                //console.log(model); consola gittiğini kontrol ettik
                $.ajax({
                    "headers": {
                        "Content-Type":"application/json"
                    },
                    url: '@Url.Action("AddCategory","CategoryApi")',
                    type: "post",
                    data: JSON.stringify(model),
                    dataType: "json",
                    success: function (response) {
                        console.log(response.responseText);
                    },
                    error: function (request, status, error) {
                        console.log(request.responseText);
                    }
                });
            });
        });
    </script>
}